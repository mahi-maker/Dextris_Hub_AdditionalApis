openapi: 3.0.0
info:
  title: Job Platform API
  description: API documentation for a job platform application
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server
  - url: https://api.jobplatform.example.com
    description: Production server (example)

tags:
  - name: skills
    description: Skills management
  - name: search
    description: Search functionality
  - name: notifications
    description: User notifications

paths:
  /api/skills:
    get:
      summary: List available skills
      tags:
        - skills
      responses:
        '200':
          description: A list of skills
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Skill'

  /api/profile/skills:
    post:
      summary: Add skills to user profile
      tags:
        - skills
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - skillIds
              properties:
                userId:
                  type: integer
                  example: 1
                skillIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
      responses:
        '201':
          description: Skills added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      userId:
                        type: integer
                        example: 1
                      skills:
                        type: array
                        items:
                          $ref: '#/components/schemas/Skill'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/search/jobs:
    get:
      summary: Advanced job search
      tags:
        - search
      parameters:
        - name: skills
          in: query
          description: Comma-separated list of skill IDs
          schema:
            type: string
            example: "1,3,5"
        - name: location
          in: query
          description: Job location
          schema:
            type: string
            example: "New York"
        - name: title
          in: query
          description: Job title
          schema:
            type: string
            example: "Developer"
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'

  /api/search/candidates:
    get:
      summary: Search for candidates
      tags:
        - search
      parameters:
        - name: skills
          in: query
          description: Comma-separated list of skill IDs
          schema:
            type: string
            example: "1,3,5"
        - name: experience
          in: query
          description: Minimum years of experience
          schema:
            type: integer
            example: 3
        - name: title
          in: query
          description: Job title
          schema:
            type: string
            example: "Developer"
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Candidate'

  /api/notifications:
    get:
      summary: Get user notifications
      tags:
        - notifications
      parameters:
        - name: userId
          in: query
          required: true
          description: User ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: User notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Skill:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "JavaScript"
    
    Job:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Senior Java Developer"
        company:
          type: string
          example: "Tech Corp"
        location:
          type: string
          example: "New York"
        description:
          type: string
          example: "Looking for an experienced Java developer"
        requiredSkills:
          type: array
          items:
            type: integer
          example: [2, 3]
        salary:
          type: string
          example: "120,000 - 150,000"
    
    Candidate:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "john@example.com"
        skills:
          type: array
          items:
            type: integer
          example: [1, 2, 3]
        title:
          type: string
          example: "Full Stack Developer"
        experience:
          type: integer
          example: 5
    
    Notification:
      type: object
      properties:
        id:
          type: integer
          example: 1
        userId:
          type: integer
          example: 1
        message:
          type: string
          example: "Your application was viewed"
        read:
          type: boolean
          example: false
        date:
          type: string
          format: date
          example: "2023-05-15"
    
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Error message"